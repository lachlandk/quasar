self.Quasar=new function(){this.add=function(e,t){const r=new this.Expression(new this.Node("operator","+"));return r.root.left=e.root,r.root.right=t.root,r},this.gcd=function(e,t){let r=Math.max(Math.abs(e),Math.abs(t)),i=Math.min(Math.abs(e),Math.abs(t));for(;0!==i;){let e=r%i;r=i,i=e}return r},this.bezout=function(e,t){let r=Math.max(Math.abs(e),Math.abs(t)),i=Math.min(Math.abs(e),Math.abs(t)),a=1,s=0,o=0,p=1;for(;0!==i;){let e=Math.floor(r/i),t=r-e*i,n=a-e*s,l=o-e*p;r=i,a=s,o=p,i=t,s=n,p=l}return[o,a]},this.lcm=function(e,t){return Math.abs(e*t)/this.gcd(e,t)},this.Node=function(e,t,r){this.type=e,this.value=t,this.properties={};for(const e in r)this.properties[e]=r[e];this.left=null,this.right=null},this.Expression=function(e=null){this.root=e},this.parse=function(e){const t=e.match(/\d+|\S/gi),r=[];if(!t)return new this.Expression;t.forEach(function(e,t){if(e.match(/\d+/))r.push({type:"constant",value:parseInt(e)});else if(e.match(/[a-z]/i))r.push({type:"variable",value:e});else if(e.match(/[+\-*/^]/))e.match(/\^/)?r.push({type:"operator",value:"^",associativity:"right",precedence:1}):e.match(/[\/*]/)?r.push({type:"operator",value:e,associativity:"left",precedence:2}):e.match(/[+-]/)&&r.push({type:"operator",value:e,associativity:"left",precedence:3});else if(e.match(/\(/))r.push({type:"open-parenthesis",value:"("});else{if(!e.match(/\)/))throw{name:"LexingError",msg:"Unknown Token: "+e};r.push({type:"close-parenthesis",value:")"})}});for(let e=0;e<r.length;e++)if(0===e||"variable"!==r[e].type&&"constant"!==r[e].type&&"open-parenthesis"!==r[e].type){if("operator"===r[e].type&&("-"===r[e].value&&r[e+1]&&"-"===r[e+1].value&&(r[e]={type:"operator",value:"+",associativity:"left",precedence:3},r.splice(e+1,1)),!r[e].value.match(/[+-]/)||0!==e&&"operator"!==r[e-1].type&&"open-parenthesis"!==r[e-1].type||("-"===r[e].value?r[e]={type:"operator",value:"~",precedence:0}:"+"===r[e].value&&r.splice(e,1)),r[e]&&r[e].value.match(/[/*-+^]/)&&(r[e-1]&&"operator"===r[e-1].type||!r[e-1]||!r[e+1])))throw{name:"ParsingError",msg:"Invalid operands for operator: "+r[e].value}}else"variable"!==r[e-1].type&&"constant"!==r[e-1].type&&"close-parenthesis"!==r[e-1].type||r.splice(e,0,{type:"operator",value:"*",associativity:"left",precedence:2});const i=[],a=[];for(;0!==r.length;){const e=r.shift();if("constant"===e.type||"variable"===e.type)i.push(e);else if("open-parenthesis"===e.type)a.unshift(e);else if("close-parenthesis"===e.type){for(;"open-parenthesis"!==a[0].type;)if(i.push(a.shift()),0===a.length)throw{name:"ParsingError",msg:"Mismatched delimiter: )"};a.shift()}else if("operator"===e.type)if("left"===e.associativity){for(;0!==a.length&&"operator"===a[0].type&&a[0].precedence<=e.precedence;)i.push(a.shift());a.unshift(e)}else if("right"===e.associativity){for(;0!==a.length&&a[0].precedence<e.precedence;)i.push(a.shift());a.unshift(e)}else a.unshift(e)}for(;0!==a.length;){if("open-parenthesis"===a[0].type)throw{name:"ParsingError",msg:"Mismatched delimiter: )"};i.push(a.shift())}i.forEach(function(e,t){if("variable"===e.type||"constant"===e.type)a.unshift(new this.Node(e.type,e.value));else if("operator"===e.type)if(0===e.precedence){let t=new this.Node(e.type,e.value);t.left=a.shift(),a.unshift(t)}else{let t=new this.Node(e.type,e.value);t.right=a.shift(),a.length>0&&(t.left=a.shift()),a.unshift(t)}},this);const s=new this.Expression(a[0]);return function e(t,r){t&&"operator"===t.type&&(e(t.left,r),e(t.right,r),"^"===t.value&&"variable"===t.left.type&&"constant"===t.right.type&&(t.type="variable",t.value=t.left.value,t.properties.coefficient=1,t.properties.power=t.right.value,t.left=null,t.right=null),"*"===t.value&&"constant"===t.left.type&&"variable"===t.right.type&&(t.type="variable",t.value=t.right.value,t.properties.coefficient=t.left.value,t.properties.power=t.right.properties.power?t.right.properties.power:1,t.left=null,t.right=null),!t.value.match(/[\^/*]/)||"variable"!==t.left.type&&"operator"!==t.left.type||"variable"!==t.right.type&&"operator"!==t.right.type||(t.type="expression",t.value=new r.Expression(new r.Node("operator",t.value)),t.value.root.left=t.left,t.value.root.right=t.right,t.left=null,t.right=null),"~"===t.value&&"operator"===t.left.type&&(t.type="expression",t.value=new r.Expression(new r.Node("operator","~")),t.value.root.left=t.left,t.left=null))}(s.root,this),s}};