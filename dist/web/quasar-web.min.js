self.Quasar=new function(){this.polynomialAdd=function(){},this.polynomialSubtract=function(){},this.polynomialMultiply=function(){},this.polynomialDivide=function(){},this.polynomialDerivative=function(){},this.polynomialIntegral=function(){},this.gcd=function(e,t){let i=Math.max(Math.abs(e),Math.abs(t)),s=Math.min(Math.abs(e),Math.abs(t));for(;0!==s;){let e=i%s;i=s,s=e}return i},this.bezout=function(e,t){let i=Math.max(Math.abs(e),Math.abs(t)),s=Math.min(Math.abs(e),Math.abs(t)),a=1,n=0,h=0,o=1;for(;0!==s;){let e=Math.floor(i/s),t=i-e*s,p=a-e*n,l=h-e*o;i=s,a=n,h=o,s=t,n=p,o=l}return[h,a]},this.lcm=function(e,t){return Math.abs(e*t)/this.gcd(e,t)},this.Node=function(e,t){this.type=e,this.value=t,this.left=null,this.right=null},this.Expression=function(e=null){this.root=e},this.parse=function(e){const t=e.match(/\d+|\S/gi),i=[];t.forEach(function(e,t){if(e.match(/\d+/))i.push({type:"constant",value:parseInt(e)});else if(e.match(/[a-z]/i))i.push({type:"variable",value:e});else if(e.match(/[+\-*/^]/))e.match(/\^/)?i.push({type:"operator",value:"^",associativity:"right",precedence:1}):e.match(/[\/*]/)?i.push({type:"operator",value:e,associativity:"left",precedence:2}):e.match(/[+-]/)&&i.push({type:"operator",value:e,associativity:"left",precedence:3});else if(e.match(/[(\[]/))i.push({type:"open-parenthesis",value:e});else if(e.match(/[)\]]/))i.push({type:"close-parenthesis",value:e});else{if(!e.match(/,/))throw{name:"LexingError",msg:"Unknown Token: "+e};i.push({type:"delimiter",value:e})}});for(let e=0;e<i.length;e++)0===e||"variable"!==i[e].type&&"constant"!==i[e].type&&"open-parenthesis"!==i[e].type?"operator"===i[e].type&&(!i[e].value.match(/[+-]/)||0!==e&&"operator"!==i[e-1].type&&"open-parenthesis"!==i[e-1].type||("-"===i[e].value?i[e]={type:"operator",value:"~",precedence:0}:i.splice(e,1))):"variable"!==i[e-1].type&&"constant"!==i[e-1].type&&"close-parenthesis"!==i[e-1].type||i.splice(e,0,{type:"operator",value:"*",associativity:"left",precedence:2});const s=[],a=[];for(;0!==i.length;){const e=i.shift();if("constant"===e.type||"variable"===e.type)s.push(e);else if("open-parenthesis"===e.type)a.unshift(e);else if("close-parenthesis"===e.type){for(;"open-parenthesis"!==a[0].type;)s.push(a.shift());a.shift()}else if("operator"===e.type)if("left"===e.associativity){for(;0!==a.length&&"operator"===a[0].type&&a[0].precedence<=e.precedence;)s.push(a.shift());a.unshift(e)}else if("right"===e.associativity){for(;0!==a.length&&a[0].precedence<e.precedence;)s.push(a.shift());a.unshift(e)}else a.unshift(e)}for(;0!==a.length;)s.push(a.shift());return s.forEach(function(e,t){if("variable"===e.type||"constant"===e.type)a.unshift(new this.Node(e.type,e.value));else if("operator"===e.type)if(0===e.precedence){let t=new this.Node(e.type,e.value);t.left=a.shift(),a.unshift(t)}else{let t=new this.Node(e.type,e.value);t.right=a.shift(),a.length>0&&(t.left=a.shift()),a.unshift(t)}},this),new this.Expression(a[0])}};